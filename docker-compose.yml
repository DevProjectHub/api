version: '3.8'

services:
  # api:
  #   container_name: api
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     target: production
  #     args:
  #       - POSTGRES_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/voluntary?schema=public&connect_timeout=60
  #   environment:
  #     - NODE_ENV=production
  #     - POSTGRES_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/voluntary?schema=public&connect_timeout=60
  #   restart: 'on-failure'
  #   env_file:
  #     - .env
  #   ports:
  #     - ${PORT:-3000}:${PORT:-3000}
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   links:
  #     - postgres
  #   networks:
  #     - voluntary

  postgres:
    container_name: voluntary.postgres
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    networks:
      - voluntary
    volumes:
      - ./scripts/docker/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d voluntary -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  voluntary:
    name: voluntary

networks:
  voluntary:
    name: voluntary
    driver: bridge
